const int tons::DEDUST_SWAP = 100000000;

cell pack_swap_params(slice deal_address, slice buyer_address) inline {
    return begin_cell()
            .store_uint(0, 32)                 ;; deadline
            .store_slice(deal_address)         ;; recipient address 
            .store_slice(MARKETPLACE_ADDRESS)  ;; referral address
            .store_maybe_ref(
                begin_cell().store_slice(buyer_address).end_cell()
            )                                  ;; fulfill payload
            .store_uint(0, 1)                  ;; reject payload
        .end_cell();
}

cell ton_swap_buy_message(int query_id, int swap_amount, slice dedust_pool_address, int price, slice deal_address, slice buyer_address) inline {
    return begin_cell()
            .store_uint(op::SWAP_TON, 32)
            .store_uint(query_id, 64)
            .store_coins(swap_amount)
            .store_slice(dedust_pool_address)
            .store_uint(0, 1)
            .store_coins(price)  ;; minimum received
            .store_uint(0, 1)    ;; swap step
            .store_ref(
                pack_swap_params(deal_address, buyer_address)
            )                    ;; swap params
        .end_cell();
}