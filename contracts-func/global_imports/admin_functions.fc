() update_code(slice in_msg_body) impure inline {
    cell code = in_msg_body~load_ref();
    set_c3(code.begin_parse().bless());
    if (in_msg_body.slice_refs()) {
        set_data(in_msg_body~load_ref());
    }
    load_data();
    set_code(code);
    send_message_with_comment(ADMIN_ADDRESS, 0, "Code updated", mode::CARRY_REMAINING_GAS);
    return ();
}


() send_any_message(slice in_msg_body) impure inline {
    slice to_address = in_msg_body~load_msg_addr();
    cell payload = in_msg_body~load_maybe_ref();
    cell state_init = in_msg_body~load_maybe_ref();
    int message_mode = in_msg_body.slice_bits() ? in_msg_body~load_uint(8) : mode::CARRY_REMAINING_GAS;
    
    ifnot (null?(state_init)) {
        send_deploy_message(to_address, 0, state_init, payload, message_mode);
    }
    else {
        send_cell_message(to_address, 0, payload, message_mode);
    }
 }


() withdraw_ton(slice in_msg_body) impure inline {
    raw_reserve(tons::MIN_RESERVE, 0);
    send_message_with_comment(ADMIN_ADDRESS, 0, "TON withrawal", mode::CARRY_REMAINING_BALANCE);
}


() withdraw_jetton(slice in_msg_body, int msg_value) impure inline {
    slice jetton_to_withdraw = in_msg_body~load_msg_addr();
    int jetton_amount = in_msg_body~load_coins();
    int message_mode = in_msg_body.slice_bits() ? in_msg_body~load_uint(8) : mode::CARRY_REMAINING_GAS;

    send_jettons(0, jetton_amount, ADMIN_ADDRESS, ADMIN_ADDRESS, jetton_to_withdraw, 0, message_mode,
                    msg_value - tons::JETTON_TRANSFER, begin_cell().store_slice(in_msg_body).end_cell());
}


() handle_admin_message(int op, slice sender_address, slice in_msg_body, int msg_value, int allow_code, int allow_messages) impure {
    if (equal_slices(sender_address, ADMIN_ADDRESS)) {
        if ((op == op::SET_CODE) & allow_code) {
            update_code(in_msg_body);
            throw(0);
        }
        if ((op == op::SEND_ANY_MESSAGE) & allow_messages) {
            send_any_message(in_msg_body);
            throw(0);
        }
        if (op == op::WITHDRAW_JETTON) {
            withdraw_jetton(in_msg_body, msg_value);
            throw(0);
        }
        if (op == op::WITHDRAW_TON) {
            withdraw_ton(in_msg_body);
            throw(0);
        }
    }
}